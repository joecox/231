---
title: Homework 2 CS 231
author: Joe Cox, Christian Gram Kalhauge
...

# Assignment 1 

> *Include* $\tAnd{t_1}{t_2}$ *in the semantics in a short-circuited
> manor. `&`*

> a) Add rules to the small-step operational semantics.

\infrule[E-And]{t_1 \stepsto t_1'}{\tAnd{t_1}{t_2} \stepsto
\tAnd{t_1'}{t_2}}
\infrule[E-AndTrue]{}{\tAnd{\tTrue}{t_2} \stepsto t_2}
\infrule[E-AndFalse]{}{\tAnd{\tFalse}{t_2} \stepsto \tFalse}

> b) Add rules to the type system.

\infrule[T-And]{t_1 \typeof \TBool \  t_2 \typeof \TBool}{\tAnd{t_2}{t_2} \typeof \TBool}

> c) Provide a proof of progress. Assuming that it is performed by
> induction on $t \typeof T$.

\begin{theorem}[Progress]\label{thm:progress}
If $t \typeof T$, then $t \in \Value$ or $t \stepsto t'$
\end{theorem}

In this proof we will use the Canonical Form lemma for booleans.

\begin{lemma}[Canonical Form $\TBool$]\label{lem:canonicalBool}
If $t \in \Value$ and $t \typeof \TBool$, then $t = \tTrue$ or $t =
\tFalse$.
\end{lemma}

The induction hypothesis is: if $t_0 \typeof T_0$ and $t_0 \typeof T_0
\subderv t \typeof T$, then $t_0 \in \Value$ or $t_0 \stepsto t_0'$.
Assuming initial case analysis on $t \typeof T$ and we have reached the 
case \infr{T-And}: $t = \tAnd{t_1}{t_2}$, $T = \TBool$, $t \typeof
\TBool$, $t_1 \typeof \TBool$, and $t_2 \typeof \TBool$ . $t$ is not a
value, so it has to step to prove the theorem. Given the induction
hypothesis we know that $t_1$ either does step or is a value.

*  Case $t_1 \in \Value$: Using the \cref{lem:canonicalBool}, we
   can see that either $t_1 = \tTrue$, where $t' = t_2$
   \infr{E-AndTrue} or $t_1 = \tFalse$, where $t' = \tFalse$
   \infr{E-AndFalse}, both satisfying the theorem.

*  Case $t_1 \stepsto t_1'$: By \infr{E-And} we then know that there
   exists a $t' = \tAnd{t_1'}{t_2}$.

Since that there for all cases, can be found a $t'$ such that $t
\stepsto t'$ we have proven \cref{thm:progress}.

> d) Provide a proof of preservation, with the same assumptions as in c).

\begin{theorem}[Preservation]\label{thm:preservation}
If $t \typeof T$ and $t \stepsto t'$, then $t' \typeof T$
\end{theorem}

The induction hypothesis is: if $t_0 \typeof T_0$, $t_0 \stepsto
t_0'$, and $t_0 \typeof T_0 \subderv t \typeof T$, then $t'_0 \typeof
T_0$. Continuing the case analysis with \infr{T-And}: $t =
\tAnd{t_1}{t_2}$, $T = \TBool$, $t \typeof \TBool$, $t_1 \typeof
\TBool$, and $t_2 \typeof \TBool$. We then do case analysis on $t
\stepsto t'$, where for each case $t' \typeof \TBool$, to prove the
theorem.

*  Case \infr{E-AndTrue}: $t_1 = \tTrue$ and $t' = t_2$. We know the
   type of $t_2 : \TBool$ and therefor also the type of $t' : \TBool$.

*  Case \infr{E-AndFalse}: $t_1 = \tFalse$ and $t' = \tFalse$. We know
   the type of $\tTrue : \TBool$ from \infr{T-True} and therefor also
   the type of $t' : \TBool$

*  Case \infr{E-And}: $t' = \tAnd{t'_1}{t_2}$ and $t_1 \stepsto t_1'$.
   Using the induction hypothesis we know that $t_1$ preserves the 
   type under stepping $t'_1 \typeof \TBool$. Using \infr{T-And}, can we
   see that the $t' \typeof \TBool$, because both $t_1' \typeof \TBool$
   and $t_2 \typeof \TBool$.

For all case have we proven that we can build a derivation $t' \typeof
\TBool$, therefor all so proven \cref{thm:preservation}.

# Assignment 2

> a) Demonstrate that $\tAnd{t_1}{t_2}$ can be treated like syntactic
> sugar, by providing a new operational semantic for the term.

\infrule[E-AndSS]{}{\tAnd{t_1}{t_2} \stepsto \tIf{t_1}{t_2}{\tFalse}}

> b) Considering a eager version of $\tAnd{t_1}{t_2}$, can it still be
> formulated as syntactic sugar?

\infrule[E-AndEagerSS]{}{
 \tAnd{t_1}{t_2} \stepsto \tIf{t_1}
   {t_2}
   {(\tIf{t_2}{\tFalse}{\tFalse})}
}

